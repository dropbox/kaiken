public final class anvil/hint/binding/com/dropbox/kaiken/skeleton/core/Com_dropbox_kaiken_skeleton_core_KaikenConfigKt {
	public static final fun getCom_dropbox_kaiken_skeleton_core_KaikenConfig_reference ()Lkotlin/reflect/KClass;
	public static final fun getCom_dropbox_kaiken_skeleton_core_KaikenConfig_scope ()Lkotlin/reflect/KClass;
}

public final class anvil/hint/binding/com/dropbox/kaiken/skeleton/core/Com_dropbox_kaiken_skeleton_core_RealCoroutineScopesKt {
	public static final fun getCom_dropbox_kaiken_skeleton_core_RealCoroutineScopes_reference ()Lkotlin/reflect/KClass;
	public static final fun getCom_dropbox_kaiken_skeleton_core_RealCoroutineScopes_scope ()Lkotlin/reflect/KClass;
}

public final class anvil/hint/binding/com/dropbox/kaiken/skeleton/usermanagement/Com_dropbox_kaiken_skeleton_usermanagement_RealUserStoreKt {
	public static final fun getCom_dropbox_kaiken_skeleton_usermanagement_RealUserStore_reference ()Lkotlin/reflect/KClass;
	public static final fun getCom_dropbox_kaiken_skeleton_usermanagement_RealUserStore_scope ()Lkotlin/reflect/KClass;
}

public final class anvil/hint/merge/com/dropbox/kaiken/skeleton/core/Com_dropbox_kaiken_skeleton_core_CoroutineScopeBindingsKt {
	public static final fun getCom_dropbox_kaiken_skeleton_core_CoroutineScopeBindings_reference ()Lkotlin/reflect/KClass;
	public static final fun getCom_dropbox_kaiken_skeleton_core_CoroutineScopeBindings_scope ()Lkotlin/reflect/KClass;
}

public final class anvil/hint/merge/com/dropbox/kaiken/skeleton/core/Com_dropbox_kaiken_skeleton_core_KaikenAppServicesKt {
	public static final fun getCom_dropbox_kaiken_skeleton_core_KaikenAppServices_reference ()Lkotlin/reflect/KClass;
	public static final fun getCom_dropbox_kaiken_skeleton_core_KaikenAppServices_scope ()Lkotlin/reflect/KClass;
}

public final class anvil/hint/merge/com/dropbox/kaiken/skeleton/core/Com_dropbox_kaiken_skeleton_core_KaikenUserServicesKt {
	public static final fun getCom_dropbox_kaiken_skeleton_core_KaikenUserServices_reference ()Lkotlin/reflect/KClass;
	public static final fun getCom_dropbox_kaiken_skeleton_core_KaikenUserServices_scope ()Lkotlin/reflect/KClass;
}

public final class anvil/hint/merge/com/dropbox/kaiken/skeleton/dagger/Com_dropbox_kaiken_skeleton_dagger_SdkSpecKt {
	public static final fun getCom_dropbox_kaiken_skeleton_dagger_SdkSpec_reference ()Lkotlin/reflect/KClass;
	public static final fun getCom_dropbox_kaiken_skeleton_dagger_SdkSpec_scope ()Lkotlin/reflect/KClass;
}

public final class anvil/hint/merge/com/dropbox/kaiken/skeleton/scoping/Com_dropbox_kaiken_skeleton_scoping_AppComponent_AppParentComponentKt {
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_AppComponent_AppParentComponent_reference ()Lkotlin/reflect/KClass;
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_AppComponent_AppParentComponent_scope ()Lkotlin/reflect/KClass;
}

public final class anvil/hint/merge/com/dropbox/kaiken/skeleton/scoping/Com_dropbox_kaiken_skeleton_scoping_AuthOptionalComponent_ParentComponentKt {
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_AuthOptionalComponent_ParentComponent_reference ()Lkotlin/reflect/KClass;
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_AuthOptionalComponent_ParentComponent_scope ()Lkotlin/reflect/KClass;
}

public final class anvil/hint/merge/com/dropbox/kaiken/skeleton/scoping/Com_dropbox_kaiken_skeleton_scoping_AuthOptionalScreenComponent_ScreenParentComponentKt {
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_AuthOptionalScreenComponent_ScreenParentComponent_reference ()Lkotlin/reflect/KClass;
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_AuthOptionalScreenComponent_ScreenParentComponent_scope ()Lkotlin/reflect/KClass;
}

public final class anvil/hint/merge/com/dropbox/kaiken/skeleton/scoping/Com_dropbox_kaiken_skeleton_scoping_AuthRequiredComponent_ParentComponentKt {
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_AuthRequiredComponent_ParentComponent_reference ()Lkotlin/reflect/KClass;
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_AuthRequiredComponent_ParentComponent_scope ()Lkotlin/reflect/KClass;
}

public final class anvil/hint/merge/com/dropbox/kaiken/skeleton/scoping/Com_dropbox_kaiken_skeleton_scoping_AuthRequiredScreenComponent_ScreenParentComponentKt {
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_AuthRequiredScreenComponent_ScreenParentComponent_reference ()Lkotlin/reflect/KClass;
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_AuthRequiredScreenComponent_ScreenParentComponent_scope ()Lkotlin/reflect/KClass;
}

public final class anvil/hint/merge/com/dropbox/kaiken/skeleton/scoping/Com_dropbox_kaiken_skeleton_scoping_UserParentComponentKt {
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_UserParentComponent_reference ()Lkotlin/reflect/KClass;
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_UserParentComponent_scope ()Lkotlin/reflect/KClass;
}

public final class anvil/hint/subcomponent/com/dropbox/kaiken/skeleton/scoping/Com_dropbox_kaiken_skeleton_scoping_AppComponentKt {
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_AppComponent_reference ()Lkotlin/reflect/KClass;
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_AppComponent_scope ()Lkotlin/reflect/KClass;
}

public final class anvil/hint/subcomponent/com/dropbox/kaiken/skeleton/scoping/Com_dropbox_kaiken_skeleton_scoping_AuthOptionalComponentKt {
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_AuthOptionalComponent_reference ()Lkotlin/reflect/KClass;
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_AuthOptionalComponent_scope ()Lkotlin/reflect/KClass;
}

public final class anvil/hint/subcomponent/com/dropbox/kaiken/skeleton/scoping/Com_dropbox_kaiken_skeleton_scoping_AuthOptionalScreenComponentKt {
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_AuthOptionalScreenComponent_reference ()Lkotlin/reflect/KClass;
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_AuthOptionalScreenComponent_scope ()Lkotlin/reflect/KClass;
}

public final class anvil/hint/subcomponent/com/dropbox/kaiken/skeleton/scoping/Com_dropbox_kaiken_skeleton_scoping_AuthRequiredComponentKt {
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_AuthRequiredComponent_reference ()Lkotlin/reflect/KClass;
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_AuthRequiredComponent_scope ()Lkotlin/reflect/KClass;
}

public final class anvil/hint/subcomponent/com/dropbox/kaiken/skeleton/scoping/Com_dropbox_kaiken_skeleton_scoping_AuthRequiredScreenComponentKt {
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_AuthRequiredScreenComponent_reference ()Lkotlin/reflect/KClass;
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_AuthRequiredScreenComponent_scope ()Lkotlin/reflect/KClass;
}

public final class anvil/hint/subcomponent/com/dropbox/kaiken/skeleton/scoping/Com_dropbox_kaiken_skeleton_scoping_UserComponentKt {
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_UserComponent_reference ()Lkotlin/reflect/KClass;
	public static final fun getCom_dropbox_kaiken_skeleton_scoping_UserComponent_scope ()Lkotlin/reflect/KClass;
}

public final class com/dropbox/kaiken/skeleton/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public fun <init> ()V
}

public final class com/dropbox/kaiken/skeleton/core/AppSkeletonInitializer : com/dropbox/kaiken/skeleton/dependencymanagement/SkeletonScopedServices {
	public static final field Companion Lcom/dropbox/kaiken/skeleton/core/AppSkeletonInitializer$Companion;
	public static field appSkeleton Lcom/dropbox/kaiken/skeleton/core/AppSkeletonInitializer;
	public fun <init> (Lcom/dropbox/kaiken/skeleton/core/AppSkeletonScopedServices;)V
	public final fun getAppSkeletonDelegate ()Lcom/dropbox/kaiken/skeleton/core/AppSkeletonScopedServices;
	public fun getComponent ()Lcom/dropbox/kaiken/skeleton/dagger/SdkSpec;
	public fun getUserServicesFactory ()Lkotlin/jvm/functions/Function2;
	public fun getUserServicesProvider ()Lcom/dropbox/kaiken/scoping/UserServicesProvider;
	public fun provideAppServices ()Lcom/dropbox/kaiken/scoping/AppServices;
	public fun provideUserServicesOf (Ljava/lang/String;)Lcom/dropbox/kaiken/scoping/UserServices;
	public fun setUserServicesProvider (Lcom/dropbox/kaiken/scoping/UserServicesProvider;)V
}

public final class com/dropbox/kaiken/skeleton/core/AppSkeletonInitializer$Companion {
	public final fun getAppSkeleton$skeleton_release ()Lcom/dropbox/kaiken/skeleton/core/AppSkeletonInitializer;
	public final fun getInstance ()Lcom/dropbox/kaiken/skeleton/core/AppSkeletonInitializer;
	public final fun init$skeleton_release (Lcom/dropbox/kaiken/skeleton/dagger/SdkSpec;)Lcom/dropbox/kaiken/skeleton/core/AppSkeletonInitializer;
	public final fun setAppSkeleton$skeleton_release (Lcom/dropbox/kaiken/skeleton/core/AppSkeletonInitializer;)V
}

public final class com/dropbox/kaiken/skeleton/core/AppSkeletonScopedServices : com/dropbox/kaiken/skeleton/dependencymanagement/SkeletonScopedServices {
	public field userServicesProvider Lcom/dropbox/kaiken/scoping/UserServicesProvider;
	public fun <init> (Lcom/dropbox/kaiken/skeleton/dagger/SdkSpec;)V
	public final fun getAppServices ()Lcom/dropbox/kaiken/scoping/AppServices;
	public fun getComponent ()Lcom/dropbox/kaiken/skeleton/dagger/SdkSpec;
	public fun getUserServicesFactory ()Lkotlin/jvm/functions/Function2;
	public fun getUserServicesProvider ()Lcom/dropbox/kaiken/scoping/UserServicesProvider;
	public fun provideAppServices ()Lcom/dropbox/kaiken/scoping/AppServices;
	public fun provideUserServicesOf (Ljava/lang/String;)Lcom/dropbox/kaiken/scoping/UserServices;
	public fun setUserServicesProvider (Lcom/dropbox/kaiken/scoping/UserServicesProvider;)V
}

public abstract interface class com/dropbox/kaiken/skeleton/core/AppSpecificScopedServicesFactory {
	public abstract fun createAppServices (Lcom/dropbox/kaiken/skeleton/dagger/SdkSpec;)Lcom/dropbox/kaiken/scoping/AppServices;
	public abstract fun createUserServices (Lcom/dropbox/kaiken/scoping/AppServices;Lcom/dropbox/kaiken/skeleton/core/SkeletonUser;)Lcom/dropbox/kaiken/scoping/UserServices;
}

public abstract interface class com/dropbox/kaiken/skeleton/core/CoroutineScopeBindings {
	public abstract fun coroutineScopes ()Lcom/dropbox/kaiken/skeleton/core/CoroutineScopes;
}

public abstract interface class com/dropbox/kaiken/skeleton/core/CoroutineScopes {
	public abstract fun getGlobalScope ()Lkotlinx/coroutines/CoroutineScope;
	public abstract fun getMainScope ()Lkotlinx/coroutines/CoroutineScope;
}

public abstract interface class com/dropbox/kaiken/skeleton/core/KaikenAppServices : com/dropbox/kaiken/scoping/AppServices {
	public abstract fun userStore ()Lcom/dropbox/kaiken/skeleton/usermanagement/UserStore;
}

public final class com/dropbox/kaiken/skeleton/core/KaikenConfig : com/dropbox/kaiken/skeleton/core/SkeletonConfig {
	public fun <init> ()V
	public fun getScopedServicesFactory ()Lcom/dropbox/kaiken/skeleton/core/AppSpecificScopedServicesFactory;
}

public final class com/dropbox/kaiken/skeleton/core/KaikenConfig_Factory : dagger/internal/Factory {
	public fun <init> ()V
	public static fun create ()Lcom/dropbox/kaiken/skeleton/core/KaikenConfig_Factory;
	public fun get ()Lcom/dropbox/kaiken/skeleton/core/KaikenConfig;
	public synthetic fun get ()Ljava/lang/Object;
	public static fun newInstance ()Lcom/dropbox/kaiken/skeleton/core/KaikenConfig;
}

public abstract interface class com/dropbox/kaiken/skeleton/core/KaikenUserServices : com/dropbox/kaiken/scoping/UserServices {
}

public final class com/dropbox/kaiken/skeleton/core/KaikenUserServicesProvider : com/dropbox/kaiken/skeleton/core/SkeletonUserServicesProvider {
	public fun <init> (Lcom/dropbox/kaiken/scoping/AppServices;Lkotlin/jvm/functions/Function2;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CoroutineScope;)V
	public final fun provideUserServices (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun provideUserServicesOf (Ljava/lang/String;)Lcom/dropbox/kaiken/scoping/UserServices;
}

public final class com/dropbox/kaiken/skeleton/core/RealCoroutineScopes : com/dropbox/kaiken/skeleton/core/CoroutineScopes {
	public fun <init> ()V
	public fun getGlobalScope ()Lkotlinx/coroutines/CoroutineScope;
	public fun getMainScope ()Lkotlinx/coroutines/CoroutineScope;
}

public final class com/dropbox/kaiken/skeleton/core/RealCoroutineScopes_Factory : dagger/internal/Factory {
	public fun <init> ()V
	public static fun create ()Lcom/dropbox/kaiken/skeleton/core/RealCoroutineScopes_Factory;
	public fun get ()Lcom/dropbox/kaiken/skeleton/core/RealCoroutineScopes;
	public synthetic fun get ()Ljava/lang/Object;
	public static fun newInstance ()Lcom/dropbox/kaiken/skeleton/core/RealCoroutineScopes;
}

public abstract interface class com/dropbox/kaiken/skeleton/core/SkeletonAccessToken {
}

public final class com/dropbox/kaiken/skeleton/core/SkeletonAccessTokenPair : com/dropbox/kaiken/skeleton/core/SkeletonAccessToken {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun getKey ()Ljava/lang/String;
	public final fun getSecret ()Ljava/lang/String;
}

public abstract interface class com/dropbox/kaiken/skeleton/core/SkeletonConfig {
	public abstract fun getScopedServicesFactory ()Lcom/dropbox/kaiken/skeleton/core/AppSpecificScopedServicesFactory;
}

public final class com/dropbox/kaiken/skeleton/core/SkeletonOauth2 : com/dropbox/kaiken/skeleton/core/SkeletonAccessToken {
	public fun <init> (Ljava/lang/String;)V
	public final fun getAccessToken ()Ljava/lang/String;
}

public abstract interface class com/dropbox/kaiken/skeleton/core/SkeletonOwner : com/dropbox/kaiken/skeleton/dependencymanagement/SkeletonScopedServices {
	public abstract fun getComponent ()Lcom/dropbox/kaiken/skeleton/dagger/SdkSpec;
	public abstract fun getScopedServices ()Lcom/dropbox/kaiken/skeleton/core/AppSkeletonScopedServices;
	public abstract fun getSdkSpec ()Lcom/dropbox/kaiken/skeleton/dagger/SdkSpec;
	public abstract fun getUserServicesFactory ()Lkotlin/jvm/functions/Function2;
	public abstract fun getUserServicesProvider ()Lcom/dropbox/kaiken/scoping/UserServicesProvider;
	public abstract fun provideAppServices ()Lcom/dropbox/kaiken/scoping/AppServices;
	public abstract fun provideUserServicesOf (Ljava/lang/String;)Lcom/dropbox/kaiken/scoping/UserServices;
	public abstract fun setScopedServices (Lcom/dropbox/kaiken/skeleton/core/AppSkeletonScopedServices;)V
	public abstract fun setUserServicesProvider (Lcom/dropbox/kaiken/scoping/UserServicesProvider;)V
}

public final class com/dropbox/kaiken/skeleton/core/SkeletonOwner$DefaultImpls {
	public static fun getComponent (Lcom/dropbox/kaiken/skeleton/core/SkeletonOwner;)Lcom/dropbox/kaiken/skeleton/dagger/SdkSpec;
	public static fun getUserServicesFactory (Lcom/dropbox/kaiken/skeleton/core/SkeletonOwner;)Lkotlin/jvm/functions/Function2;
	public static fun getUserServicesProvider (Lcom/dropbox/kaiken/skeleton/core/SkeletonOwner;)Lcom/dropbox/kaiken/scoping/UserServicesProvider;
	public static fun provideAppServices (Lcom/dropbox/kaiken/skeleton/core/SkeletonOwner;)Lcom/dropbox/kaiken/scoping/AppServices;
	public static fun provideUserServicesOf (Lcom/dropbox/kaiken/skeleton/core/SkeletonOwner;Lcom/dropbox/kaiken/scoping/ViewingUserSelector;)Lcom/dropbox/kaiken/scoping/UserServices;
	public static fun provideUserServicesOf (Lcom/dropbox/kaiken/skeleton/core/SkeletonOwner;Ljava/lang/String;)Lcom/dropbox/kaiken/scoping/UserServices;
	public static fun setUserServicesProvider (Lcom/dropbox/kaiken/skeleton/core/SkeletonOwner;Lcom/dropbox/kaiken/scoping/UserServicesProvider;)V
}

public abstract class com/dropbox/kaiken/skeleton/core/SkeletonOwnerApplication : android/app/Application, com/dropbox/kaiken/skeleton/core/SkeletonOwner {
	public field scopedServices Lcom/dropbox/kaiken/skeleton/core/AppSkeletonScopedServices;
	public fun <init> ()V
	public fun getComponent ()Lcom/dropbox/kaiken/skeleton/dagger/SdkSpec;
	public fun getScopedServices ()Lcom/dropbox/kaiken/skeleton/core/AppSkeletonScopedServices;
	public fun getUserServicesFactory ()Lkotlin/jvm/functions/Function2;
	public fun getUserServicesProvider ()Lcom/dropbox/kaiken/scoping/UserServicesProvider;
	public fun onCreate ()V
	public fun provideAppServices ()Lcom/dropbox/kaiken/scoping/AppServices;
	public fun provideUserServicesOf (Ljava/lang/String;)Lcom/dropbox/kaiken/scoping/UserServices;
	public fun setScopedServices (Lcom/dropbox/kaiken/skeleton/core/AppSkeletonScopedServices;)V
	public fun setUserServicesProvider (Lcom/dropbox/kaiken/scoping/UserServicesProvider;)V
}

public final class com/dropbox/kaiken/skeleton/core/SkeletonUser {
	public fun <init> (Ljava/lang/String;Lcom/dropbox/kaiken/skeleton/core/SkeletonAccessToken;)V
	public final fun getAccessToken ()Lcom/dropbox/kaiken/skeleton/core/SkeletonAccessToken;
	public final fun getUserId ()Ljava/lang/String;
}

public abstract interface class com/dropbox/kaiken/skeleton/core/SkeletonUserServicesProvider : com/dropbox/kaiken/scoping/UserServicesProvider {
}

public final class com/dropbox/kaiken/skeleton/core/SkeletonUserServicesProvider$DefaultImpls {
	public static fun provideUserServicesOf (Lcom/dropbox/kaiken/skeleton/core/SkeletonUserServicesProvider;Lcom/dropbox/kaiken/scoping/ViewingUserSelector;)Lcom/dropbox/kaiken/scoping/UserServices;
}

public abstract interface class com/dropbox/kaiken/skeleton/dagger/SdkSpec {
	public abstract fun getSkeletonConfig ()Lcom/dropbox/kaiken/skeleton/core/SkeletonConfig;
}

public abstract interface class com/dropbox/kaiken/skeleton/dependencymanagement/SkeletonScopedServices : com/dropbox/kaiken/scoping/ScopedServicesProvider {
	public abstract fun getComponent ()Lcom/dropbox/kaiken/skeleton/dagger/SdkSpec;
	public abstract fun getUserServicesFactory ()Lkotlin/jvm/functions/Function2;
	public abstract fun getUserServicesProvider ()Lcom/dropbox/kaiken/scoping/UserServicesProvider;
	public abstract fun setUserServicesProvider (Lcom/dropbox/kaiken/scoping/UserServicesProvider;)V
}

public final class com/dropbox/kaiken/skeleton/dependencymanagement/SkeletonScopedServices$DefaultImpls {
	public static fun provideUserServicesOf (Lcom/dropbox/kaiken/skeleton/dependencymanagement/SkeletonScopedServices;Lcom/dropbox/kaiken/scoping/ViewingUserSelector;)Lcom/dropbox/kaiken/scoping/UserServices;
}

public abstract interface class com/dropbox/kaiken/skeleton/scoping/AppComponent : com/dropbox/kaiken/scoping/AppServices {
}

public abstract interface class com/dropbox/kaiken/skeleton/scoping/AppComponent$AppParentComponent {
	public abstract fun appComponent ()Lcom/dropbox/kaiken/skeleton/scoping/AppComponent;
}

public abstract class com/dropbox/kaiken/skeleton/scoping/AppScope {
}

public abstract class com/dropbox/kaiken/skeleton/scoping/AuthAwareInjectorHolder : androidx/fragment/app/Fragment, com/dropbox/kaiken/runtime/InjectorHolder, com/dropbox/kaiken/scoping/AuthAwareFragment {
	public fun <init> ()V
	public fun finishIfInvalidAuth ()Z
	public fun getViewingUserSelector ()Lcom/dropbox/kaiken/scoping/ViewingUserSelector;
	public fun locateInjector ()Lcom/dropbox/kaiken/Injector;
	public fun resolveDependencyProvider ()Ljava/lang/Object;
}

public abstract interface class com/dropbox/kaiken/skeleton/scoping/AuthOptionalComponent : com/dropbox/kaiken/Injector {
}

public abstract interface class com/dropbox/kaiken/skeleton/scoping/AuthOptionalComponent$ParentComponent {
	public abstract fun createAuthOptionalComponent ()Lcom/dropbox/kaiken/skeleton/scoping/AuthOptionalComponent;
}

public abstract class com/dropbox/kaiken/skeleton/scoping/AuthOptionalInjectorHolder : androidx/fragment/app/Fragment, com/dropbox/kaiken/runtime/InjectorHolder, com/dropbox/kaiken/scoping/AuthOptionalFragment {
	public fun <init> ()V
	public fun finishIfInvalidAuth ()Z
	public fun getAuthRequired ()Z
	public fun locateInjector ()Lcom/dropbox/kaiken/Injector;
	public fun resolveDependencyProvider ()Ljava/lang/Object;
}

public abstract class com/dropbox/kaiken/skeleton/scoping/AuthOptionalScope {
}

public abstract interface class com/dropbox/kaiken/skeleton/scoping/AuthOptionalScreenComponent : com/dropbox/kaiken/Injector {
}

public abstract interface class com/dropbox/kaiken/skeleton/scoping/AuthOptionalScreenComponent$ScreenParentComponent : com/dropbox/kaiken/Injector {
	public abstract fun createAuthOptionalScreenComponent ()Lcom/dropbox/kaiken/skeleton/scoping/AuthOptionalScreenComponent;
}

public abstract class com/dropbox/kaiken/skeleton/scoping/AuthOptionalScreenScope {
}

public abstract interface class com/dropbox/kaiken/skeleton/scoping/AuthRequiredComponent {
}

public abstract interface class com/dropbox/kaiken/skeleton/scoping/AuthRequiredComponent$ParentComponent {
	public abstract fun createAuthRequiredComponent ()Lcom/dropbox/kaiken/skeleton/scoping/AuthRequiredComponent;
}

public abstract class com/dropbox/kaiken/skeleton/scoping/AuthRequiredInjectorHolder : androidx/fragment/app/Fragment, com/dropbox/kaiken/runtime/InjectorHolder, com/dropbox/kaiken/scoping/AuthRequiredFragment {
	public fun <init> ()V
	public fun finishIfInvalidAuth ()Z
	public fun getAuthRequired ()Z
	public fun locateInjector ()Lcom/dropbox/kaiken/Injector;
	public fun resolveDependencyProvider ()Ljava/lang/Object;
}

public abstract class com/dropbox/kaiken/skeleton/scoping/AuthRequiredScope {
}

public abstract interface class com/dropbox/kaiken/skeleton/scoping/AuthRequiredScreenComponent : com/dropbox/kaiken/Injector {
}

public abstract interface class com/dropbox/kaiken/skeleton/scoping/AuthRequiredScreenComponent$ScreenParentComponent : com/dropbox/kaiken/Injector {
	public abstract fun createAuthRequiredScreenComponent ()Lcom/dropbox/kaiken/skeleton/scoping/AuthRequiredScreenComponent;
}

public abstract class com/dropbox/kaiken/skeleton/scoping/AuthRequiredScreenScope {
}

public final class com/dropbox/kaiken/skeleton/scoping/InjectorViewModelFactory : androidx/lifecycle/ViewModelProvider$Factory {
	public fun <init> (Lcom/dropbox/kaiken/runtime/InjectorFactory;)V
	public fun create (Ljava/lang/Class;)Landroidx/lifecycle/ViewModel;
}

public abstract interface annotation class com/dropbox/kaiken/skeleton/scoping/SingleIn : java/lang/annotation/Annotation {
	public abstract fun clazz ()Ljava/lang/Class;
}

public final class com/dropbox/kaiken/skeleton/scoping/SingleInKt {
	public static final synthetic fun authInjector (Lcom/dropbox/kaiken/scoping/DependencyProviderResolver;)Lcom/dropbox/kaiken/runtime/InjectorFactory;
	public static final synthetic fun authOptionalInjectorFactory (Lcom/dropbox/kaiken/scoping/DependencyProviderResolver;)Lcom/dropbox/kaiken/runtime/InjectorFactory;
	public static final synthetic fun cast (Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract class com/dropbox/kaiken/skeleton/scoping/SkeletonScope {
}

public abstract interface class com/dropbox/kaiken/skeleton/scoping/UserComponent : com/dropbox/kaiken/scoping/UserServices {
}

public abstract interface class com/dropbox/kaiken/skeleton/scoping/UserComponent$Factory {
	public abstract fun userComponent (I)Lcom/dropbox/kaiken/skeleton/scoping/UserComponent;
}

public abstract interface class com/dropbox/kaiken/skeleton/scoping/UserParentComponent {
	public abstract fun createUserComponent ()Lcom/dropbox/kaiken/skeleton/scoping/UserComponent$Factory;
}

public abstract class com/dropbox/kaiken/skeleton/scoping/UserScope {
}

public final class com/dropbox/kaiken/skeleton/usermanagement/RealUserStore : com/dropbox/kaiken/skeleton/usermanagement/UserStore {
	public fun <init> (Lkotlinx/coroutines/flow/Flow;)V
	public fun getUserById (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getUserEvents ()Lkotlinx/coroutines/flow/Flow;
}

public final class com/dropbox/kaiken/skeleton/usermanagement/RealUserStore_Factory : dagger/internal/Factory {
	public fun <init> (Ljavax/inject/Provider;)V
	public static fun create (Ljavax/inject/Provider;)Lcom/dropbox/kaiken/skeleton/usermanagement/RealUserStore_Factory;
	public fun get ()Lcom/dropbox/kaiken/skeleton/usermanagement/RealUserStore;
	public synthetic fun get ()Ljava/lang/Object;
	public static fun newInstance (Lkotlinx/coroutines/flow/Flow;)Lcom/dropbox/kaiken/skeleton/usermanagement/RealUserStore;
}

public abstract interface class com/dropbox/kaiken/skeleton/usermanagement/SkeletonMapper {
	public abstract fun toSkeletonUser (Ljava/lang/Object;)Lcom/dropbox/kaiken/skeleton/core/SkeletonUser;
}

public abstract interface class com/dropbox/kaiken/skeleton/usermanagement/UserStore {
	public abstract fun getUserById (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getUserEvents ()Lkotlinx/coroutines/flow/Flow;
}

public final class com/dropbox/kaiken/skeleton/usermanagement/UserStoreKt {
	public static final fun minusById (Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;
}

public final class com/dropbox/kaiken/skeleton/usermanagement/UsersEvent {
	public fun <init> (Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V
	public synthetic fun <init> (Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1$skeleton_release ()Ljava/util/Set;
	public final fun component2 ()Ljava/util/Set;
	public final fun component3 ()Ljava/util/Set;
	public final fun copy (Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)Lcom/dropbox/kaiken/skeleton/usermanagement/UsersEvent;
	public static synthetic fun copy$default (Lcom/dropbox/kaiken/skeleton/usermanagement/UsersEvent;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;ILjava/lang/Object;)Lcom/dropbox/kaiken/skeleton/usermanagement/UsersEvent;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getUsers$skeleton_release ()Ljava/util/Set;
	public final fun getUsersAdded ()Ljava/util/Set;
	public final fun getUsersRemoved ()Ljava/util/Set;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

